enum LNFStatus {
    REPORTED
    AVAILABLE
    CLAIMED
}


type Image {
    name: String
    type: String
    data: String
    keywords: [String]
}

input ImageInput {
    name: String
    type: String
    data: String
    keywords: [String]
}

type Location {
    gps: String
    keyword: [String]
}

input LocationInput {
    gps: String
    keyword: [String]
}

type Comment {
    user: User
    timestamp: DateTime
    text: String
}

input CommentInput {
    user: UserInput
    timestamp: DateTime
    text: String
}

type Vote {
    user: User
    timestamp: DateTime
    score: Int
}

input VoteInput {
    user: UserInput
    timestamp: DateTime
    score: Int
}

type LostItem {
    id: ID!
    title: String!

    description: String
    category: [String]
    status: LNFStatus

    timestamp: DateTime
    location: Location
    images: [Image]
    keywords: [String]

    comments: [Comment]
    votes: [Vote]

    reportedBy: User
    matchedTo: FoundItem
    possibleMatches: [FoundItem]
}

input LostItemInput {
    title: String

    description: String
    category: [String]
    status: LNFStatus

    timestamp: DateTime
    location: LocationInput
    images: [ImageInput]
    keyword: [String]

    comments: [CommentInput]
    votes: [VoteInput]

    reportedBy: UserInput
    matchedTo: FoundItemInput
}

type Query {
    lostItem(id: ID!): LostItem
    lostItems: [LostItem]
}

type Mutation {
    createLostItem(lostItemInput: LostItemInput): LostItem
    updateLostItem(id: ID!, lostItemInput: LostItemInput): LostItem
    deleteLostItem(id: ID!): LostItem
}